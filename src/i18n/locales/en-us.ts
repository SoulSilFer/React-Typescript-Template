export const enUsTranslations = {
  translations: {
    username: 'User',
    login: 'Log in',
    password: 'Password',
    iForgotMyPassword: 'I forgot my password',
    createAnAccountNow: 'Create an account now',
    opsPageNotFound: 'Ops .. page not found',
    backToTheSite: 'Back to the site',
    rememberMe: 'Remember me',
    language: 'Language',
    settings: 'Settings',
    portuguese: 'Portuguese',
    english: 'English',
    theme: 'Theme',
    dark: 'Dark',
    light: 'Light',
    ticTacToe: 'Tic Tac Toe',
    draws: 'Draws',
    matches: 'Matches',
    draw: 'Draw',
    won: 'won',
    newGame: 'New Game',
    cancel: 'Cancel',
    confirm: 'Confirm',
    games: 'Games',
    player: 'Player',
    computer: 'Computer',
    qtdGames: 'Qtd. of games',
    paper: 'paper',
    rock: 'rock',
    scizor: 'scizor',
    theComputerChose: 'The computer chose',
    youWon: 'You won!',
    youLost: 'You lost!',
    jokenpo: 'Rock, paper and scizor',
    chooseYourWeapon: 'Choose your weapon',
    calculator: 'Calculator ',
    historic: 'Historic',
    convertMonetaryValue: 'Convert monetary value',
    from: 'From',
    to: 'To',
    combinationNotAllowedAPI:
      'Currency combination not allowed by the API used',
    value: 'Value',
    convert: 'Convert',
    invalidValueNumbersAnPeriods: 'Invalid value, only numbers and periods(.)',
    result: 'Result',
    clear: 'Clear',
    convertLengthMeasurement: 'Convert units of measurement of lenght',
    convertTemperatureMeasurement: 'Convert temperature units',
    meter: 'Meter',
    km: 'Kilometer',
    cm: 'Centimeter',
    mm: 'Millimeter',
    in: 'Inch',
    ft: 'Foot',
    yd: 'Yard',
    mi: 'Mile',
    mc: 'Micrometers',
    nm: 'Nanometers',
    angstroms: 'Angstroms',
    astronomicalUnits: 'Astronomical Units',
    ly: 'Light Years',
    parsecs: 'Parsecs',
    number: 'Number',
    getRandom: 'Get random',
    minValue: 'Minimum value',
    maxValue: 'Maximum value',
    qtdResult: 'Qty. result',
    generateValues: 'Generate values',
    insertOwnNumbers: 'Insert own numbers',
    numbersToBeSorted: 'Numbers to be sorted',
    onlyNCDAccept: 'Only numbers, comma (,) and period(.) are accepted',
    spreadByComma: 'Numbers must be separated by a comma (,)',
    toUseBrokeNumber: 'To use "broken" numbers use dot (.)',
    acceptFormat: 'Accepted format',
    insertNumAndNQtd: 'Enter the numbers and number of numbers',
    qtdCantEatInserted:
      'The number of numbers cannot be greater than the number of numbers entered',
    insertValues: 'Enter the values',
    diffNumberValue:
      'The number of numbers cannot be greater than the difference between the values',
    minMax: 'The minimum value cannot be greater than the maximum value',
    qtdEqualZero: 'The result quantity number cannot be 0',
    text: 'Text',
    textToBeSorted: 'Text to be sorted',
    textSpreadByComma: 'Text must be separated by a comma (,)',
    randomNumber: 'Random number',
    randomText: 'Random text',
    monetaryValue: 'Monetary value',
    lengthMeasurement: 'Length measurement',
    temperatureMeasurement: 'Temperature measurement',
    calculateBmi: 'Calculate BMI',
    weight: 'Weight',
    height: 'Height',
    calculate: 'Calculate',
    veryUnderweight: 'Very underweight',
    thinness: 'Thinness',
    overweight: 'Overweight',
    obesity: 'Obesity',
    severeObesity: 'Severe obesity',
    severa: 'severe',
    morbid: 'morbid',
    below: 'Below',
    inBetween: 'In between',
    biggerThen: 'Bigger then',
    bmi: 'BMI',
    classification: 'Classification',
    obesityGrade: 'Obesity (grade)',
    and: 'and',
    toDoList: 'To do list',
    add: 'Add',
    title: 'Title',
    description: 'Description',
    delete: 'Delete',
    createAt: 'Create: ',
    finalizedAt: 'Finished: ',
    at: 'at',
    sun: 'Sunday',
    mon: 'Monday',
    tue: 'Tuesday',
    wed: 'Wednesday',
    thu: 'Thursday',
    fri: 'Friday',
    sat: 'Saturday'
  }
};

export default enUsTranslations;
